@model IEnumerable<BookDiary.Models.ViewModels.CurrentReadViewModels.CurrentReadIndexViewModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Current Reads</title>
    <style>
        :root {
            --primary-color: #6D4C41; /* Darker brown */
            --secondary-color: #A1887F; /* Darker tan */
            --light-beige: #EFEBE9; /* Cooler beige */
            --dark-brown: #4E342E; /* Even darker brown */
            --accent-color: #8D6E63; /* Cooler accent */
            --background-pattern: repeating-linear-gradient(45deg, var(--light-beige) 0px, var(--light-beige) 10px, #E8E2DC 10px, #E8E2DC 11px);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: var(--background-pattern);
            color: #333;
            margin: 0;
            padding: 0;
            min-height: 100vh;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            background-color: var(--primary-color);
            color: white;
            padding: 25px 0;
            text-align: center;
            border-radius: 8px 8px 0 0;
            margin-bottom: 30px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            position: relative;
            overflow: hidden;
        }

            header::before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 5px;
                background: linear-gradient(90deg, var(--accent-color), var(--secondary-color), var(--accent-color));
            }

        h1 {
            margin: 0;
            font-size: 2.2rem;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        }

        .stats-summary {
            display: flex;
            justify-content: space-around;
            margin-bottom: 30px;
            gap: 15px;
        }

        .stat-card {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
            flex: 1;
            text-align: center;
            border-left: 4px solid var(--primary-color);
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--primary-color);
            margin: 5px 0;
        }

        .stat-label {
            font-size: 0.9rem;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .section-title {
            color: var(--dark-brown);
            margin: 30px 0 20px;
            font-size: 1.5rem;
            padding-bottom: 8px;
            border-bottom: 2px solid var(--secondary-color);
        }

        .reads-grid {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .read-card {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--secondary-color);
            display: flex;
            flex-direction: row;
            margin: 0 auto;
            transition: transform 0.2s, box-shadow 0.2s;
            position: relative;
        }

            .read-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
            }

        .book-cover {
            min-width: 150px;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            margin-left: 20px;
        }

            .book-cover img {
                width: 100%;
                height: auto;
                object-fit: cover;
                max-height: 300px;
                transition: transform 0.3s ease;
            }

        .read-card:hover .book-cover img {
            transform: scale(1.05);
        }

        .book-details {
            padding: 25px;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            position: relative;
        }

        .book-title {
            font-size: 1.4rem;
            font-weight: 600;
            margin-top: 0;
            margin-bottom: 15px;
            color: var(--dark-brown);
            line-height: 1.3;
        }

        .progress-container {
            margin: 15px 0;
        }

        .progress-bar {
            height: 15px;
            background-color: #e0e0e0;
            border-radius: 8px;
            overflow: hidden;
            position: relative;
        }

        .progress-fill {
            height: 100%;
            background-color: var(--primary-color);
            border-radius: 8px;
            transition: width 0.5s ease;
            position: relative;
            overflow: hidden;
        }

            .progress-fill::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.2) 20%, rgba(255,255,255,0.1) 40%);
                animation: shine 2s infinite linear;
            }

        keyframes shine {
            0%

        {
            transform: translateX(-100%);
        }

        100% {
            transform: translateX(100%);
        }

        }

        .progress-text {
            display: flex;
            justify-content: space-between;
            margin: 5px 0;
            font-size: 0.95rem;
            color: #555;
            font-weight: 500;
        }

        .pages-info {
            margin: 15px 0;
            font-size: 0.95rem;
            color: #555;
            background-color: rgba(209, 196, 180, 0.2);
            padding: 10px;
            border-radius: 6px;
            border-left: 3px solid var(--secondary-color);
        }

            .pages-info p {
                margin: 5px 0;
            }

        .card-actions {
            display: flex;
            flex-direction: row;
            gap: 10px;
            margin-top: auto;
        }

        .btn {
            padding: 12px 15px;
            border: none;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            text-align: center;
            font-size: 0.95rem;
            display: block;
            width: 100%;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .btn-update {
            background-color: var(--secondary-color);
            color: white;
        }

            .btn-update:hover {
                background-color: var(--accent-color);
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            }

        .btn-mark-read {
            background-color: #81C784;
            color: white;
        }

            .btn-mark-read:hover {
                background-color: #66BB6A;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            }

        .btn-delete {
            background-color: #EF9A9A;
            color: white;
        }

            .btn-delete:hover {
                background-color: #E57373;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            }

        .banner {
            background: linear-gradient(135deg, var(--primary-color), var(--dark-brown));
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

            .banner h2 {
                margin-top: 0;
                font-size: 1.6rem;
            }

            .banner p {
                margin-bottom: 0;
                opacity: 0.9;
            }

        .modal-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 100;
            backdrop-filter: blur(4px);
        }

        .modal {
            background-color: white;
            border-radius: 8px;
            width: 400px;
            max-width: 90%;
            padding: 25px;
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.3);
            animation: modalAppear 0.3s ease;
        }

        keyframes modalAppear {
            from

        {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-title {
            margin: 0;
            color: var(--dark-brown);
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #777;
        }

        .modal-body {
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-weight: 500;
                color: var(--dark-brown);
            }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--secondary-color);
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(109, 76, 65, 0.2);
                outline: none;
            }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .empty-state {
            text-align: center;
            padding: 60px 30px;
            background-color: white;
            border-radius: 8px;
            border: 1px dashed var(--secondary-color);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }

            .empty-state h2 {
                color: var(--dark-brown);
                margin-bottom: 20px;
            }

            .empty-state p {
                color: #666;
                margin-bottom: 25px;
            }

        .btn-add {
            background-color: var(--primary-color);
            color: white;
            display: inline-block;
            text-decoration: none;
            padding: 12px 25px;
        }

            .btn-add:hover {
                background-color: var(--dark-brown);
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            }

        .footer {
            margin-top: 50px;
            text-align: center;
            padding: 20px 0;
            color: #666;
            font-size: 0.9rem;
            border-top: 1px solid #ddd;
        }

        media (max-width: 768px) {
            .read-card

        {
            max-width: 100%;
        }

        .stats-summary {
            flex-direction: column;
        }

        }

        media (max-width: 480px) {
            .read-card

        {
            flex-direction: column;
        }

        .book-cover {
            width: 100%;
            height: 200px;
        }

            .book-cover img {
                height: 100%;
                object-fit: contain;
            }

        .card-actions {
            flex-direction: column;
        }

        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>My Current Reads</h1>
        </header>

        @if (Model != null && Model.Any())
        {
            <div class="stats-summary">
                <div class="stat-card">
                    <div class="stat-value">@Model.Count()</div>
                    <div class="stat-label">Books in Progress</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">@Model.Sum(r => r.Pages)</div>
                    <div class="stat-label">Pages Read</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">@Model.Sum(r => r.TotalPages - r.Pages)</div>
                    <div class="stat-label">Pages Left</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">@Math.Round(Model.Average(r => (double)r.Pages / r.TotalPages * 100))%</div>
                    <div class="stat-label">Average Progress</div>
                </div>
            </div>

            <div class="banner">
                <h2>Happy Reading!</h2>
                <p>Track your progress, update your current page, and enjoy your reading journey.</p>
            </div>

            <h2 class="section-title">Your Current Books</h2>

            <div class="reads-grid">
                @foreach (var read in Model)
                {
                    <div class="read-card" data-id="@read.Id">
                        <div class="book-cover">
                            @if (!string.IsNullOrEmpty(read.CoverImageURL))
                            {
                                <img src="@read.CoverImageURL" alt="Cover of @read.BookName">
                            }
                            else
                            {
                                <img src="/api/placeholder/300/250" alt="No cover available">
                            }
                        </div>
                        <div class="book-details">
                            <h3 class="book-title">@read.BookName</h3>

                            <div class="progress-text">
                                <span>Progress</span>
                                <span class="progress-percentage">@Math.Round((double)read.Pages / read.TotalPages * 100)%</span>
                            </div>

                            <div class="progress-container">
                                <div class="progress-bar">
                                    <div class="progress-fill" style="width: @Math.Round((double)read.Pages / read.TotalPages * 100)%"></div>
                                </div>
                            </div>

                            <div class="pages-info">
                                <p>Page <span class="current-page">@read.Pages</span> of <span class="total-pages">@read.TotalPages</span></p>
                                <p><span class="pages-left">@(read.TotalPages - read.Pages)</span> pages left</p>
                            </div>

                            <div class="card-actions">
                                <a href="#" class="btn btn-update" onclick="openUpdateModal('@read.Id', '@read.BookName', @read.Pages, @read.TotalPages)">Update Progress</a>
                                <a href="/CurrentRead/MarkAsRead/@read.Id" class="btn btn-mark-read">Mark as Read</a>
                                <a href="/CurrentRead/Delete/@read.Id" class="btn btn-delete">Delete</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <h2>No books in progress</h2>
                <p>You haven't added any books to your reading list yet.</p>
                <a href="/Book" class="btn btn-add">Browse Books</a>
            </div>
        }

        <div class="footer">
            Book Diary &copy; @DateTime.Now.Year - Track your reading journey
        </div>
    </div>

    <!-- Update Progress Modal -->
    <div class="modal-backdrop" id="updateModal">
        <div class="modal">
            <div class="modal-header">
                <h4 class="modal-title">Update Reading Progress</h4>
                <button type="button" class="close-btn" onclick="closeModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="updateForm" action="/CurrentRead/UpdateProgress" method="post">
                    <input type="hidden" id="readId" name="Id">

                    <div class="form-group">
                        <label id="bookTitle"></label>
                    </div>

                    <div class="form-group">
                        <label for="currentPage">Current Page</label>
                        <input type="number" id="currentPage" name="CurrentPage" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label>Total Pages: <span id="bookTotalPages"></span></label>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-delete" onclick="closeModal()">Cancel</button>
                        <button type="submit" class="btn btn-update">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Function to open the update modal
        function openUpdateModal(id, title, currentPage, totalPages) {
            document.getElementById('readId').value = id;
            document.getElementById('bookTitle').textContent = title;
            document.getElementById('currentPage').value = currentPage;
            document.getElementById('currentPage').max = totalPages;
            document.getElementById('bookTotalPages').textContent = totalPages;

            // Show the modal
            document.getElementById('updateModal').style.display = 'flex';

            // Prevent default behavior
            event.preventDefault();
        }

        // Function to close the modal
        function closeModal() {
            document.getElementById('updateModal').style.display = 'none';
        }

        // Close modal if clicking outside of it
        window.addEventListener('click', function(event) {
            if (event.target == document.getElementById('updateModal')) {
                closeModal();
            }
        });
    </script>
</body>
</html>
