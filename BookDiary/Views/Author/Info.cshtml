@model BookDiary.Models.ViewModels.AuthorViewModels.AuthorAdminViewModel


<div class="author-profile-container">
    <div class="author-header">
        <div class="profile-picture-container">
            @if (!string.IsNullOrEmpty(Model.ProfilePictureURL))
            {
                <img src="@Model.ProfilePictureURL" alt="@Model.Name" class="profile-picture" />
            }
            else
            {
                <div class="profile-picture-placeholder">
                    <span>@Model.Name.Substring(0, 1)</span>
                </div>
            }
        </div>
        <div class="author-title">
            <h1>@Model.Name</h1>
            <div class="author-subtitle">
                <span class="birth-date">Born: @Model.BirthDate.ToString("MMMM d, yyyy")</span>
                @if (!string.IsNullOrEmpty(Model.WebSiteLink))
                {
                    <span class="separator">•</span>
                    <a href="@Model.WebSiteLink" class="website-link" target="_blank">
                        <i class="fas fa-globe"></i> Visit Website: @Model.WebSiteLink
                    </a>
                }
                @if (!string.IsNullOrEmpty(Model.Email))
                {
                    <span class="separator">•</span>
                    <a href="mailto:@Model.Email" class="email-link">
                        <i class="fas fa-envelope"></i> Email: @Model.Email
                    </a>
                }
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Bio))
    {
        <div class="author-bio">
            <h2>Biography</h2>
            <div class="bio-content">
                @Html.Raw(Model.Bio)
            </div>
        </div>
    }

    @if (Model.Books != null && Model.Books.Any())
    {
        <div class="author-books">
            <h2>Books by @Model.Name</h2>
            <div class="books-grid">
                @foreach (var book in Model.Books)
                {
                    <div class="book-card">
                        <div class="book-cover">
                            @if (!string.IsNullOrEmpty(book.CoverImageURL))
                            {
                                <img src="@book.CoverImageURL" alt="@book.Title" />
                            }
                            else
                            {
                                <div class="book-cover-placeholder">
                                    <span>@book.Title.Substring(0, 1)</span>
                                </div>
                            }
                        </div>
                        
                    </div>
                }
            </div>
        </div>
    }
</div>

<style>
    /* Base styles */
    .author-profile-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Author header */
    .author-header {
        display: flex;
        align-items: center;
        margin-bottom: 2rem;
        transition: transform 0.3s ease;
    }

        .author-header:hover {
            transform: translateY(-5px);
        }

    /* Profile picture */
    .profile-picture-container {
        margin-right: 2rem;
    }

    .profile-picture, .profile-picture-placeholder {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .profile-picture:hover, .profile-picture-placeholder:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        }

    .profile-picture {
        object-fit: cover;
    }

    .profile-picture-placeholder {
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(45deg, #6a11cb, #2575fc);
        color: white;
        font-size: 3rem;
    }

    /* Author title */
    .author-title h1 {
        margin: 0;
        font-size: 2.5rem;
        color: #333;
    }

    .author-subtitle {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        margin-top: 0.5rem;
        color: #555;
    }

    .separator {
        margin: 0 0.5rem;
    }

    .website-link, .email-link {
        color: #2575fc;
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .website-link:hover, .email-link:hover {
            color: #6a11cb;
            text-decoration: underline;
        }

    /* Author bio */
    .author-bio {
        margin-bottom: 2rem;
        padding: 1.5rem;
        background-color: #f9f9f9;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .author-bio:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .author-bio h2 {
            margin-top: 0;
            color: #333;
            font-size: 1.5rem;
        }

    .bio-content {
        line-height: 1.6;
    }

    /* Books section */
    .author-books h2 {
        margin-bottom: 1rem;
        color: #333;
        font-size: 1.5rem;
    }

    .books-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 1.5rem;
    }

    /* Book card */
    .book-card {
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.12);
        }

    .book-cover {
        height: 250px;
        overflow: hidden;
    }

        .book-cover img {
            width: 100%;
            height: 100%;
            object-fit: fill;
            transition: transform 0.5s ease;
        }

    .book-card:hover .book-cover img {
        transform: scale(1.05);
    }

    .book-cover-placeholder {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(45deg, #ff9a9e, #fad0c4);
        color: white;
        font-size: 2rem;
    }

    .book-details {
        padding: 1rem;
    }

        .book-details h3 {
            margin: 0 0 0.5rem 0;
            font-size: 1rem;
            color: #333;
        }

    .series {
        font-size: 0.85rem;
        color: #555;
        margin: 0.25rem 0;
    }

    .series-number {
        color: #2575fc;
        font-weight: bold;
    }

    .publication-year {
        margin: 0.25rem 0 0 0;
        font-size: 0.85rem;
        color: #777;
    }

    /* Responsive adjustments */
    media (max-width: 768px) {
        .author-header

    {
        flex-direction: column;
        text-align: center;
    }

    .profile-picture-container {
        margin-right: 0;
        margin-bottom: 1rem;
    }

    .author-subtitle {
        justify-content: center;
    }

    .books-grid {
        grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
    }

    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Dynamic background effects for book cards
            const bookCards = document.querySelectorAll('.book-card');

            // Create a subtle hover animation
            bookCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    const randomColor = `rgba(${Math.floor(Math.random() * 50)},
                                           ${Math.floor(Math.random() * 50 + 100)},
                                           ${Math.floor(Math.random() * 50 + 200)}, 0.05)`;
                    this.style.background = `linear-gradient(45deg, white, ${randomColor})`;
                });

                card.addEventListener('mouseleave', function() {
                    this.style.background = 'white';
                });
            });
        });
    </script>
}